{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from bokeh.io import curdoc\n",
    "from bokeh.layouts import row\n",
    "from bokeh.models.widgets import Slider, Div\n",
    "\n",
    "\n",
    "def change_datatable(attr, old, new):\n",
    "    if slider.value == 0:\n",
    "        df0=df[(df.Sentiment ==0)]\n",
    "        df0.sort_values(by=['Phrase'], inplace=True,ascending=False)\n",
    "        df0.head(10)\n",
    "        x=df0['clean_Phrase'].value_counts()\n",
    "        data0 = pd.Series(x).reset_index(name='Count').rename(columns={'index':'clean_Phrase'}) \n",
    "        #df1=data.head(15)\n",
    "        #df0.sort_values(by=['Count'], inplace=True,ascending=False)\n",
    "        data0.head(10)\n",
    "        source = ColumnDataSource(data0.head(10))\n",
    "        columns = [\n",
    "                    TableColumn(field=\"clean_Phrase\", title='Sentiment0'),\n",
    "                    TableColumn(field=\"Count\", title='TOP 10')\n",
    "                    ]\n",
    "        dt0= DataTable(source=source, columns=columns, width=600, height=400)\n",
    "        #p7=DataTable.title=\"TOP 5 Sentiments\"\n",
    "        #show(dt0)\n",
    "    elif slider.value == 1:\n",
    "        df1=df[(df.Sentiment ==1)]\n",
    "        df1.sort_values(by=['Phrase'], inplace=True,ascending=False)\n",
    "        df1.head(10)\n",
    "        x=df1['clean_Phrase'].value_counts()\n",
    "        data1 = pd.Series(x).reset_index(name='Count').rename(columns={'index':'clean_Phrase'}) \n",
    "        #df1=data.head(15)\n",
    "        #df0.sort_values(by=['Count'], inplace=True,ascending=False)\n",
    "        data1.head(10)\n",
    "        source = ColumnDataSource(data1.head(10))\n",
    "        columns = [\n",
    "                    TableColumn(field=\"clean_Phrase\", title='Sentiment1'),\n",
    "                    TableColumn(field=\"Count\", title='TOP 10')\n",
    "                    ]\n",
    "        dt1= DataTable(source=source, columns=columns, width=600, height=400)\n",
    "        #p7=DataTable.title=\"TOP 5 Sentiments\"\n",
    "        #show(dt0)\n",
    "    elif slider.value == 2:\n",
    "        df2=df[(df.Sentiment ==2)]\n",
    "        df2.sort_values(by=['Phrase'], inplace=True,ascending=False)\n",
    "        df2.head(10)\n",
    "        x=df2['clean_Phrase'].value_counts()\n",
    "        data2 = pd.Series(x).reset_index(name='Count').rename(columns={'index':'clean_Phrase'}) \n",
    "        #df1=data.head(15)\n",
    "        #df0.sort_values(by=['Count'], inplace=True,ascending=False)\n",
    "        data2.head(10)\n",
    "        source = ColumnDataSource(data2.head(10))\n",
    "        columns = [\n",
    "                    TableColumn(field=\"clean_Phrase\", title='Sentiment2'),\n",
    "                    TableColumn(field=\"Count\", title='TOP 10')\n",
    "                    ]\n",
    "        dt2= DataTable(source=source, columns=columns, width=600, height=400)\n",
    "        #p7=DataTable.title=\"TOP 5 Sentiments\"\n",
    "        #show(dt0)\n",
    "    elif slider.value == 3:\n",
    "        df3=df[(df.Sentiment ==3)]\n",
    "        df3.sort_values(by=['Phrase'], inplace=True,ascending=False)\n",
    "        df3.head(10)\n",
    "        x=df3['clean_Phrase'].value_counts()\n",
    "        data3 = pd.Series(x).reset_index(name='Count').rename(columns={'index':'clean_Phrase'}) \n",
    "        #df1=data.head(15)\n",
    "        #df0.sort_values(by=['Count'], inplace=True,ascending=False)\n",
    "        data3.head(10)\n",
    "        source = ColumnDataSource(data3.head(10))\n",
    "        columns = [\n",
    "                    TableColumn(field=\"clean_Phrase\", title='Sentiment3'),\n",
    "                    TableColumn(field=\"Count\", title='TOP 10')\n",
    "                    ]\n",
    "        dt3= DataTable(source=source, columns=columns, width=600, height=400)\n",
    "        #p7=DataTable.title=\"TOP 5 Sentiments\"\n",
    "        #show(dt0)\n",
    "    else:\n",
    "        df4=df[(df.Sentiment ==4)]\n",
    "        df4.sort_values(by=['Phrase'], inplace=True,ascending=False)\n",
    "        df4.head(10)\n",
    "        x=df4['clean_Phrase'].value_counts()\n",
    "        data4 = pd.Series(x).reset_index(name='Count').rename(columns={'index':'clean_Phrase'}) \n",
    "        #df1=data.head(15)\n",
    "        #df0.sort_values(by=['Count'], inplace=True,ascending=False)\n",
    "        data4.head(10)\n",
    "        source = ColumnDataSource(data4.head(10))\n",
    "        columns = [\n",
    "                    TableColumn(field=\"clean_Phrase\", title='Sentiment4'),\n",
    "                    TableColumn(field=\"Count\", title='TOP 10')\n",
    "                    ]\n",
    "        dt4= DataTable(source=source, columns=columns, width=600, height=400)\n",
    "        #p7=DataTable.title=\"TOP 5 Sentiments\"\n",
    "        #show(dt0)\n",
    "slider = Slider(start=0, end=4, value=1, title=\"datatable number\")\n",
    "slider.on_change('value', change_datatable)\n",
    "pre=Div(text=\"\"\" <div><h3><strong><center> Sentimental Analysis</center></strong><h3></div>\"\"\",\n",
    "        align='center',style={'color':'firebrick','font-size':'25px','font-family':'Helvetica'})\n",
    "#logo = Div(text=\"\"\"<img src=\"static/image/logo.png\"  alt=\"logo\">\"\"\")\n",
    "\n",
    "curdoc().add_root(row(pre,slider))\n",
    "curdoc().title = \"DataTable Demo\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
